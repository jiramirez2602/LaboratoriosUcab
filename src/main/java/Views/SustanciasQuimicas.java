package Views;


import controller.ListaDeSustanciasQuimicas;
import controller.ListaLaboratorios;
import java.awt.BorderLayout;
import java.awt.Color;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.SustanciaQuimica;
import model.Usuario;
import Views.SustanciasExcel;


public class SustanciasQuimicas extends javax.swing.JPanel {
    
    private ListaLaboratorios listalaboratorios;
    private Usuario userActual;
    private ListaDeSustanciasQuimicas listasustancias;
    private DefaultTableModel tableModelSustancias;
    private HashMap<Integer, String> idMapSustancias;
    
    public SustanciasQuimicas(Usuario user,ListaLaboratorios listaLab,ListaDeSustanciasQuimicas sustancias ) {
        this.listalaboratorios = listaLab;
        this.userActual = user;
        this.listasustancias = sustancias;
        idMapSustancias = new HashMap<>();
        initComponents();
        InitStyles();
        inicializarTablaSustancias();
        actualizarTablaSustancias();
        bloquearPorRol(userActual);
    }

    private void InitStyles() {
        title.putClientProperty("FlatLaf.styleClass", "h1");
        title.setForeground(Color.black);
    }
    
    private void bloquearPorRol(Usuario user){
        if(user.verificarRol(user,"Invitado")){
            BotonCrearSustancia.setEnabled(false);
            BotonEliminarSustancia.setEnabled(false);
            BotonModificarSustancia.setEnabled(false);
        }
    }
    
    public  void ShowJPanel(JPanel p) {
        p.setSize(1038, 666);
        p.setLocation(0,0);
        BackgroundSustancias.removeAll();
        BackgroundSustancias.add(p,BorderLayout.CENTER);
        BackgroundSustancias.revalidate();
        BackgroundSustancias.repaint();
    }
    private void inicializarTablaSustancias() {
        String[] columnas = {"Nombre","Tipo de Producto","Inventario","Observaciones","Formula Quimica","Nombre comercial"};
        tableModelSustancias = new DefaultTableModel(columnas, 0);
        jTable1.setModel(tableModelSustancias);
    }
    
    private void actualizarTablaSustancias() {
        tableModelSustancias.setRowCount(0); 
        idMapSustancias.clear();  
        int row = 0;

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        try {
            ArrayList<SustanciaQuimica> sustancias = listasustancias.getListaSustanciasQuimicas();
            if(userActual.getRolUsuario().equals("Tecnico")){
                sustancias= listasustancias.listarEquipoPorUsuario(userActual);
            }
            else if((userActual.getRolUsuario().equals("Administrador"))||(userActual.getRolUsuario().equals("Invitado"))){
                sustancias = listasustancias.getListaSustanciasQuimicas();
            }
            for (SustanciaQuimica sustancia : sustancias) {
                Object[] fila = {
                    sustancia.getNombreProducto(),         
                    sustancia.getTipoDeProducto(),         
                    sustancia.getInventarioExistente(),    
                    sustancia.getObservaciones(),          
                    sustancia.getFormulaQuimica(),         
                    sustancia.getNombreComercial()         
                };

                tableModelSustancias.addRow(fila);  
                idMapSustancias.put(row, sustancia.getId());  
                for (int i = 0; i < tableModelSustancias.getColumnCount(); i++) {
                    jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
                }
                row++;
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Error al obtener la lista de sustancias quÃ­micas.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        jTable1.setDefaultEditor(Object.class, null);
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackgroundSustancias = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BotonEliminarSustancia = new javax.swing.JButton();
        BotonModificarSustancia = new javax.swing.JButton();
        BotonCrearSustancia = new javax.swing.JButton();
        BotonExportarSustancias = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        BackgroundSustancias.setBackground(new java.awt.Color(255, 255, 255));

        title.setText("Sustancias Quimicas");

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        BotonEliminarSustancia.setBackground(new java.awt.Color(18, 90, 173));
        BotonEliminarSustancia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BotonEliminarSustancia.setForeground(new java.awt.Color(255, 255, 255));
        BotonEliminarSustancia.setText("Borrar");
        BotonEliminarSustancia.setBorderPainted(false);
        BotonEliminarSustancia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BotonEliminarSustancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarSustanciaActionPerformed(evt);
            }
        });

        BotonModificarSustancia.setBackground(new java.awt.Color(18, 90, 173));
        BotonModificarSustancia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BotonModificarSustancia.setForeground(new java.awt.Color(255, 255, 255));
        BotonModificarSustancia.setText("Editar");
        BotonModificarSustancia.setBorderPainted(false);
        BotonModificarSustancia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BotonModificarSustancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonModificarSustanciaActionPerformed(evt);
            }
        });

        BotonCrearSustancia.setBackground(new java.awt.Color(18, 90, 173));
        BotonCrearSustancia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BotonCrearSustancia.setForeground(new java.awt.Color(255, 255, 255));
        BotonCrearSustancia.setText("Nuevo");
        BotonCrearSustancia.setBorderPainted(false);
        BotonCrearSustancia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BotonCrearSustancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCrearSustanciaActionPerformed(evt);
            }
        });

        BotonExportarSustancias.setBackground(new java.awt.Color(18, 90, 173));
        BotonExportarSustancias.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BotonExportarSustancias.setForeground(new java.awt.Color(255, 255, 255));
        BotonExportarSustancias.setText("Exportar");
        BotonExportarSustancias.setBorderPainted(false);
        BotonExportarSustancias.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BotonExportarSustancias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonExportarSustanciasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackgroundSustanciasLayout = new javax.swing.GroupLayout(BackgroundSustancias);
        BackgroundSustancias.setLayout(BackgroundSustanciasLayout);
        BackgroundSustanciasLayout.setHorizontalGroup(
            BackgroundSustanciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundSustanciasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundSustanciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundSustanciasLayout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(699, 699, 699))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundSustanciasLayout.createSequentialGroup()
                        .addGroup(BackgroundSustanciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(BackgroundSustanciasLayout.createSequentialGroup()
                                .addGap(310, 310, 310)
                                .addComponent(BotonExportarSustancias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotonCrearSustancia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotonModificarSustancia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotonEliminarSustancia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(50, 50, 50))))
        );
        BackgroundSustanciasLayout.setVerticalGroup(
            BackgroundSustanciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundSustanciasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BackgroundSustanciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonEliminarSustancia)
                    .addComponent(BotonModificarSustancia)
                    .addComponent(BotonCrearSustancia)
                    .addComponent(BotonExportarSustancias))
                .addGap(77, 77, 77))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundSustancias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundSustancias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed

    }//GEN-LAST:event_jTable1MousePressed

    private void BotonCrearSustanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCrearSustanciaActionPerformed
        ShowJPanel(new CrearSustanciasQuimicas(userActual,listalaboratorios,listasustancias));
    }//GEN-LAST:event_BotonCrearSustanciaActionPerformed

    private void BotonEliminarSustanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarSustanciaActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            String idSustanciaAEliminar = idMapSustancias.get(selectedRow);

            if (idSustanciaAEliminar != null && !idSustanciaAEliminar.isEmpty()) {
                int confirmacion = JOptionPane.showConfirmDialog(null, "Â¿EstÃ¡s seguro de eliminar esta sustancia quÃ­mica?", "Confirmar EliminaciÃ³n", JOptionPane.YES_NO_OPTION);

                if (confirmacion == JOptionPane.YES_OPTION) {
                    boolean eliminado = listasustancias.eliminarSustanciaQuimica(userActual, idSustanciaAEliminar);

                    if (eliminado) {
                        JOptionPane.showMessageDialog(null, "Sustancia quÃ­mica eliminada exitosamente.", "Ãxito", JOptionPane.INFORMATION_MESSAGE);
                        actualizarTablaSustancias();
                    } else {
                        JOptionPane.showMessageDialog(null, "No se pudo eliminar la sustancia quÃ­mica.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna sustancia quÃ­mica para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BotonEliminarSustanciaActionPerformed

    private void BotonModificarSustanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonModificarSustanciaActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            String idSustancia = idMapSustancias.get(selectedRow);
            SustanciaQuimica sustancia = null;
            try {
                sustancia = listasustancias.listarSustanciaQuimica(idSustancia);
            } catch (ParseException ex) {
                Logger.getLogger(SustanciasQuimicas.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (sustancia != null) {
                ShowJPanel(new ModificarSustanciasQuimicas(userActual,listalaboratorios,listasustancias,sustancia));
            } else {
                JOptionPane.showMessageDialog(null, "Sustancia quÃ­mica no encontrada", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila para modificar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BotonModificarSustanciaActionPerformed

    private void BotonExportarSustanciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonExportarSustanciasActionPerformed
        ShowJPanel(new SustanciasExcel(userActual,listalaboratorios,listasustancias));
    }//GEN-LAST:event_BotonExportarSustanciasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackgroundSustancias;
    private javax.swing.JButton BotonCrearSustancia;
    private javax.swing.JButton BotonEliminarSustancia;
    private javax.swing.JButton BotonExportarSustancias;
    private javax.swing.JButton BotonModificarSustancia;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}